#!/bin/sh
#
# resolvconf  --  Nameserver information manager
#
# This script is part of the resolvconf package
#
# Jun 2003 - July 2005: Written by Thomas Hood

# Don't use set -e; check return status instead

MYNAME="${0##*/}"
# Once the improved readlink program has made it into coreutils,
# /lib/init/ can be removed from the PATH.
PATH=/lib/init:/bin:/sbin
RUN_DIR=/etc/resolvconf/run
IFACE_DIR="${RUN_DIR}/interface"
RESOLVCONF_FILE="${RUN_DIR}/resolv.conf"
ENABLE_UPDATES_FLAGFILE="${RUN_DIR}/enable-updates"

if [ -r /lib/lsb/init-functions ] ; then
	. /lib/lsb/init-functions
	print_warning_msg() { log_warning_msg "$@" ; }
	print_error_msg() { log_failure_msg "${MYNAME}: Error: $*" ; }
	print_begin_msg() { log_begin_msg "$@" ; }
	print_end_msg_and_exit() { log_end_msg "$1" ; exit $1 ; }
else
	print_warning_msg() { echo -n "$*" >&2 ; }
	print_error_msg() { echo "${MYNAME}: Error: $*" >&2 ; }
	print_begin_msg() { echo -n "$*" ; }
	print_end_msg_and_exit() { case "$1" in (0) echo "${2}." ;; (*) echo "${3}." ;; esac ; exit $1 ; }
fi

update()
{
	[ -e "$ENABLE_UPDATES_FLAGFILE" ] || return 0
	cd "$IFACE_DIR"
	# "update" scripts must assume that interface files are in the PWD
	run-parts ${1:+--arg="$1"} ${2:+--arg="$2"} /etc/resolvconf/update.d
}

enable_updates()
{
	: >| "$ENABLE_UPDATES_FLAGFILE"
}

disable_updates()
{
	rm -f "$ENABLE_UPDATES_FLAGFILE"
}

case "$1" in
start)
	# The "start" method should _only_ be used at boot time.
	# If you want to update the resolv.conf file then use "reload".
	# On package upgrade, don't run this.
	print_begin_msg "Setting up resolvconf..."
	umask 022
	if [ ! -d "$RUN_DIR" ] ; then
		[ -L "$RUN_DIR" ] || print_end_msg_and_exit 1 "" "failed: $RUN_DIR is neither a directory nor a symbolic link"
		# Target of symlink is not a dir
		{ RUN_CANONICALDIR="$(readlink -f "$RUN_DIR")" && [ "$RUN_CANONICALDIR" ] ; } || print_end_msg_and_exit 1 "" "failed: canonical path of the run directory could not be determined"
		# Create directory at the target
		mkdir "$RUN_CANONICALDIR" || print_end_msg_and_exit 1 "" "failed creating directory $RUN_CANONICALDIR"
	fi
	# The run directory exists

	if [ -d "${RUN_DIR}/interface" ] ; then
		rm -f ${RUN_DIR}/interface/*
	else
		mkdir "${RUN_DIR}/interface" || print_end_msg_and_exit 1 "" "failed creating directory ${RUN_DIR}/interface"
	fi
	# The interface directory exists

	enable_updates || print_end_msg_and_exit 1 "" "failed enabling updates"
	update -i
	print_end_msg_and_exit "$?" "done" "failed"
	;;
stop)
	# The "stop" method should only be used at shutdown time.
	print_begin_msg "Stopping resolvconf..."
	disable_updates
	print_end_msg_and_exit "$?" "done" "failed"
	;;
restart)
	print_begin_msg "Restarting resolvconf..."
	[ -d "${RUN_DIR}/interface" ] || { print_error_msg "${RUN_DIR}/interface is not a directory" ; exit 1 ; }
	enable_updates || print_end_msg_and_exit 1 "" "failed enabling updates"
	update
	print_end_msg_and_exit $? "done" "failed"
	;;
reload|force-reload)
	# Do it silently
	[ -d "${RUN_DIR}/interface" ] || { print_error_msg "${RUN_DIR}/interface is not a directory" ; exit 1 ; }
	update
	exit $?
	;;
enable-updates)
	enable_updates
	exit $?
	;;
disable-updates)
	disable_updates
	exit $?
	;;
*)
	print_warning_msg "Usage: /etc/init.d/resolvconf {start|stop|reload|restart|force-reload|enable-updates|disable-updates}"
	exit 3
	;;
esac

